// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: 0004_system_parameter.sql

package database

import (
	"context"
	"database/sql"
)

const getAllSystemParameters = `-- name: GetAllSystemParameters :many
SELECT sys_para_id, sys_para_description, sys_para_value, createdAt, updatedAt, createdBy, updatedBy
FROM system_parameters
`

func (q *Queries) GetAllSystemParameters(ctx context.Context) ([]SystemParameter, error) {
	rows, err := q.db.QueryContext(ctx, getAllSystemParameters)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []SystemParameter
	for rows.Next() {
		var i SystemParameter
		if err := rows.Scan(
			&i.SysParaID,
			&i.SysParaDescription,
			&i.SysParaValue,
			&i.Createdat,
			&i.Updatedat,
			&i.Createdby,
			&i.Updatedby,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const getSystemParameter = `-- name: GetSystemParameter :one
SELECT sys_para_id, sys_para_description, sys_para_value, createdAt, updatedAt, createdBy, updatedBy
FROM system_parameters
WHERE sys_para_id = ?
`

func (q *Queries) GetSystemParameter(ctx context.Context, sysParaID string) (SystemParameter, error) {
	row := q.db.QueryRowContext(ctx, getSystemParameter, sysParaID)
	var i SystemParameter
	err := row.Scan(
		&i.SysParaID,
		&i.SysParaDescription,
		&i.SysParaValue,
		&i.Createdat,
		&i.Updatedat,
		&i.Createdby,
		&i.Updatedby,
	)
	return i, err
}

const saveSystemParameter = `-- name: SaveSystemParameter :execresult
INSERT INTO system_parameters (sys_para_id, sys_para_description, sys_para_value, createdAt, updatedAt, createdBy, updatedBy)
VALUES (?, ?, ?, NOW(), NOW(), ?, ?)
ON DUPLICATE KEY UPDATE sys_para_value = ?, updatedAt = NOW(), updatedBy = ?, sys_para_description = ?
`

type SaveSystemParameterParams struct {
	SysParaID            string
	SysParaDescription   sql.NullString
	SysParaValue         string
	Createdby            sql.NullString
	Updatedby            sql.NullString
	SysParaValue_2       string
	Updatedby_2          sql.NullString
	SysParaDescription_2 sql.NullString
}

func (q *Queries) SaveSystemParameter(ctx context.Context, arg SaveSystemParameterParams) (sql.Result, error) {
	return q.db.ExecContext(ctx, saveSystemParameter,
		arg.SysParaID,
		arg.SysParaDescription,
		arg.SysParaValue,
		arg.Createdby,
		arg.Updatedby,
		arg.SysParaValue_2,
		arg.Updatedby_2,
		arg.SysParaDescription_2,
	)
}
