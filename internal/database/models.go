// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package database

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"
)

type EquipmentMaintenanceEqpMtnStatus string

const (
	EquipmentMaintenanceEqpMtnStatusPending    EquipmentMaintenanceEqpMtnStatus = "pending"
	EquipmentMaintenanceEqpMtnStatusInProgress EquipmentMaintenanceEqpMtnStatus = "in_progress"
	EquipmentMaintenanceEqpMtnStatusDone       EquipmentMaintenanceEqpMtnStatus = "done"
	EquipmentMaintenanceEqpMtnStatusRejected   EquipmentMaintenanceEqpMtnStatus = "rejected"
)

func (e *EquipmentMaintenanceEqpMtnStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = EquipmentMaintenanceEqpMtnStatus(s)
	case string:
		*e = EquipmentMaintenanceEqpMtnStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for EquipmentMaintenanceEqpMtnStatus: %T", src)
	}
	return nil
}

type NullEquipmentMaintenanceEqpMtnStatus struct {
	EquipmentMaintenanceEqpMtnStatus EquipmentMaintenanceEqpMtnStatus
	Valid                            bool // Valid is true if EquipmentMaintenanceEqpMtnStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullEquipmentMaintenanceEqpMtnStatus) Scan(value interface{}) error {
	if value == nil {
		ns.EquipmentMaintenanceEqpMtnStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.EquipmentMaintenanceEqpMtnStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullEquipmentMaintenanceEqpMtnStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.EquipmentMaintenanceEqpMtnStatus), nil
}

type InternalProposalItnProposalStatus string

const (
	InternalProposalItnProposalStatusPending  InternalProposalItnProposalStatus = "pending"
	InternalProposalItnProposalStatusApproved InternalProposalItnProposalStatus = "approved"
	InternalProposalItnProposalStatusRejected InternalProposalItnProposalStatus = "rejected"
)

func (e *InternalProposalItnProposalStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = InternalProposalItnProposalStatus(s)
	case string:
		*e = InternalProposalItnProposalStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for InternalProposalItnProposalStatus: %T", src)
	}
	return nil
}

type NullInternalProposalItnProposalStatus struct {
	InternalProposalItnProposalStatus InternalProposalItnProposalStatus
	Valid                             bool // Valid is true if InternalProposalItnProposalStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullInternalProposalItnProposalStatus) Scan(value interface{}) error {
	if value == nil {
		ns.InternalProposalItnProposalStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.InternalProposalItnProposalStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullInternalProposalItnProposalStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.InternalProposalItnProposalStatus), nil
}

type OperationManualOperaManualStatus string

const (
	OperationManualOperaManualStatusActive   OperationManualOperaManualStatus = "active"
	OperationManualOperaManualStatusArchived OperationManualOperaManualStatus = "archived"
	OperationManualOperaManualStatusDeleted  OperationManualOperaManualStatus = "deleted"
)

func (e *OperationManualOperaManualStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = OperationManualOperaManualStatus(s)
	case string:
		*e = OperationManualOperaManualStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for OperationManualOperaManualStatus: %T", src)
	}
	return nil
}

type NullOperationManualOperaManualStatus struct {
	OperationManualOperaManualStatus OperationManualOperaManualStatus
	Valid                            bool // Valid is true if OperationManualOperaManualStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullOperationManualOperaManualStatus) Scan(value interface{}) error {
	if value == nil {
		ns.OperationManualOperaManualStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.OperationManualOperaManualStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullOperationManualOperaManualStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.OperationManualOperaManualStatus), nil
}

type OperationalCostsOperaCostStatus string

const (
	OperationalCostsOperaCostStatusPending  OperationalCostsOperaCostStatus = "pending"
	OperationalCostsOperaCostStatusPaid     OperationalCostsOperaCostStatus = "paid"
	OperationalCostsOperaCostStatusCanceled OperationalCostsOperaCostStatus = "canceled"
)

func (e *OperationalCostsOperaCostStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = OperationalCostsOperaCostStatus(s)
	case string:
		*e = OperationalCostsOperaCostStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for OperationalCostsOperaCostStatus: %T", src)
	}
	return nil
}

type NullOperationalCostsOperaCostStatus struct {
	OperationalCostsOperaCostStatus OperationalCostsOperaCostStatus
	Valid                           bool // Valid is true if OperationalCostsOperaCostStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullOperationalCostsOperaCostStatus) Scan(value interface{}) error {
	if value == nil {
		ns.OperationalCostsOperaCostStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.OperationalCostsOperaCostStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullOperationalCostsOperaCostStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.OperationalCostsOperaCostStatus), nil
}

type PreGoAccUserTwoFactor9999TwoFactorAuthType string

const (
	PreGoAccUserTwoFactor9999TwoFactorAuthTypeSMS   PreGoAccUserTwoFactor9999TwoFactorAuthType = "SMS"
	PreGoAccUserTwoFactor9999TwoFactorAuthTypeEMAIL PreGoAccUserTwoFactor9999TwoFactorAuthType = "EMAIL"
	PreGoAccUserTwoFactor9999TwoFactorAuthTypeAPP   PreGoAccUserTwoFactor9999TwoFactorAuthType = "APP"
)

func (e *PreGoAccUserTwoFactor9999TwoFactorAuthType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = PreGoAccUserTwoFactor9999TwoFactorAuthType(s)
	case string:
		*e = PreGoAccUserTwoFactor9999TwoFactorAuthType(s)
	default:
		return fmt.Errorf("unsupported scan type for PreGoAccUserTwoFactor9999TwoFactorAuthType: %T", src)
	}
	return nil
}

type NullPreGoAccUserTwoFactor9999TwoFactorAuthType struct {
	PreGoAccUserTwoFactor9999TwoFactorAuthType PreGoAccUserTwoFactor9999TwoFactorAuthType
	Valid                                      bool // Valid is true if PreGoAccUserTwoFactor9999TwoFactorAuthType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullPreGoAccUserTwoFactor9999TwoFactorAuthType) Scan(value interface{}) error {
	if value == nil {
		ns.PreGoAccUserTwoFactor9999TwoFactorAuthType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.PreGoAccUserTwoFactor9999TwoFactorAuthType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullPreGoAccUserTwoFactor9999TwoFactorAuthType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.PreGoAccUserTwoFactor9999TwoFactorAuthType), nil
}

// equipment_maintenance
type EquipmentMaintenance struct {
	EqpMtnID               string
	EqpMtnResID            string
	EqpMtnName             sql.NullString
	EqpMtnLocation         sql.NullString
	EqpMtnIssueDescription sql.NullString
	EqpMtnReportedBy       sql.NullString
	EqpMtnPerformedBy      sql.NullString
	EqpMtnDateReported     time.Time
	EqpMtnDateFixed        sql.NullTime
	EqpMtnCost             sql.NullString
	EqpMtnNote             sql.NullString
	// pending, in_progress, done, rejected
	EqpMtnStatus NullEquipmentMaintenanceEqpMtnStatus
	Createdat    sql.NullTime
	Updatedat    sql.NullTime
	Deletedat    sql.NullTime
	Createdby    sql.NullString
	Updatedby    sql.NullString
	Deletedby    sql.NullString
	// 0: chưa xóa, 1: đã xóa
	Isdeleted sql.NullInt32
}

// internal_note
type InternalNote struct {
	ItnNoteID      string
	ItnNoteResID   string
	ItnNoteTitle   sql.NullString
	ItnNoteContent sql.NullString
	ItnNoteType    sql.NullString
	Createdat      sql.NullTime
	Updatedat      sql.NullTime
	Deletedat      sql.NullTime
	Createdby      sql.NullString
	Updatedby      sql.NullString
	Deletedby      sql.NullString
	// 0: chưa xóa, 1: đã xóa
	Isdeleted sql.NullInt32
}

// internal_proposal
type InternalProposal struct {
	ItnProposalID      string
	ItnProposalResID   string
	ItnProposalTitle   sql.NullString
	ItnProposalContent sql.NullString
	ItnProposalType    sql.NullString
	// Trạng thái đề xuất
	ItnProposalStatus NullInternalProposalItnProposalStatus
	Createdat         sql.NullTime
	Updatedat         sql.NullTime
	Deletedat         sql.NullTime
	Createdby         sql.NullString
	Updatedby         sql.NullString
	Deletedby         sql.NullString
	// 0: chưa xóa, 1: đã xóa
	Isdeleted sql.NullInt32
}

// operation_manual
type OperationManual struct {
	OperaManualID      string
	OperaManuaResID    string
	OperaManualTitle   string
	OperaManualContent string
	OperaManualType    string
	// Trạng thái tài liệu
	OperaManualStatus NullOperationManualOperaManualStatus
	Note              sql.NullString
	Createdat         sql.NullTime
	Updatedat         sql.NullTime
	Deletedat         sql.NullTime
	Createdby         sql.NullString
	Updatedby         sql.NullString
	Deletedby         sql.NullString
	// 0: chưa xóa, 1: đã xóa
	Isdeleted sql.NullInt32
}

// operational_costs
type OperationalCost struct {
	OperaCostID          string
	OperaCostResID       string
	OperaCostType        string
	OperaCostAmount      string
	OperaCostDescription sql.NullString
	OperaCostDate        time.Time
	// Trạng thái chi phí
	OperaCostStatus NullOperationalCostsOperaCostStatus
	Createdat       sql.NullTime
	Updatedat       sql.NullTime
	Deletedat       sql.NullTime
	Createdby       sql.NullString
	Updatedby       sql.NullString
	Deletedby       sql.NullString
	// 0: chưa xóa, 1: đã xóa
	Isdeleted sql.NullInt32
}

// pre_go_acc_user_base_9999
type PreGoAccUserBase9999 struct {
	UserID         int32
	UserAccount    string
	UserPassword   string
	UserSalt       string
	UserLoginTime  sql.NullTime
	UserLogoutTime sql.NullTime
	UserLoginIp    sql.NullString
	UserCreatedAt  sql.NullTime
	UserUpdatedAt  sql.NullTime
	// authentication is enabled for the user
	IsTwoFactorEnabled sql.NullInt32
}

// pre_go_acc_user_info_9999
type PreGoAccUserInfo9999 struct {
	// User ID
	UserID uint64
	// User account
	UserAccount string
	// User nickname
	UserNickname sql.NullString
	// User avatar
	UserAvatar sql.NullString
	// User state: 0-Locked, 1-Activated, 2-Not Activated
	UserState uint8
	// Mobile phone number
	UserMobile sql.NullString
	// User gender: 0-Secret, 1-Male, 2-Female
	UserGender sql.NullInt16
	// User birthday
	UserBirthday sql.NullTime
	// User email address
	UserEmail sql.NullString
	// Authentication status: 0-Not Authenticated, 1-Pending, 2-Authenticated, 3-Failed
	UserIsAuthentication uint8
	// Record creation time
	CreatedAt sql.NullTime
	// Record update time
	UpdatedAt sql.NullTime
}

// pre_go_acc_user_two_factor_9999
type PreGoAccUserTwoFactor9999 struct {
	TwoFactorID         uint32
	UserID              uint32
	TwoFactorAuthType   PreGoAccUserTwoFactor9999TwoFactorAuthType
	TwoFactorAuthSecret string
	TwoFactorPhone      sql.NullString
	TwoFactorEmail      sql.NullString
	TwoFactorIsActive   bool
	TwoFactorCreatedAt  sql.NullTime
	TwoFactorUpdatedAt  sql.NullTime
}

// account_user_verify
type PreGoAccUserVerify9999 struct {
	VerifyID        int32
	VerifyOtp       string
	VerifyKey       string
	VerifyKeyHash   string
	VerifyType      sql.NullInt32
	IsVerified      sql.NullInt32
	IsDeleted       sql.NullInt32
	VerifyCreatedAt sql.NullTime
	VerifyUpdatedAt sql.NullTime
}

// system_parameters
type SystemParameter struct {
	SysParaID          string
	SysParaDescription sql.NullString
	SysParaValue       string
	Createdat          sql.NullTime
	Updatedat          sql.NullTime
	Createdby          sql.NullString
	Updatedby          sql.NullString
}

// user_management_account
type UserManagementAccount struct {
	UsaID              string
	UsaEmail           string
	UsaSalt            string
	UsaPassword        string
	UsaActiveTime      sql.NullTime
	UsaLockedTime      sql.NullTime
	UsaRecoverPassTime sql.NullTime
	UsaVerifyTime      sql.NullTime
	UsaVerifyCode      sql.NullString
	UsaRecoverPassCode sql.NullString
	// 0: kích hoạt
	UsaActive sql.NullInt32
	UsaLocked sql.NullInt32
	Createdat sql.NullTime
	Updatedat sql.NullTime
	Deletedat sql.NullTime
	Createdby sql.NullString
	Updatedby sql.NullString
	Deletedby sql.NullString
	// 0: chưa xóa, 1: đã xóa
	Isdeleted sql.NullInt32
}

// user_management_account
type UserManagementProfile struct {
	UsID       string
	UsName     sql.NullString
	UsAvatar   sql.NullString
	UsPhone    sql.NullString
	UsGender   sql.NullString
	UsAddress  sql.NullString
	UsBirthday sql.NullTime
	Createdat  sql.NullTime
	Updatedat  sql.NullTime
	Deletedat  sql.NullTime
	Createdby  sql.NullString
	Updatedby  sql.NullString
	Deletedby  sql.NullString
	// 0: chưa xóa, 1: đã xóa
	Isdeleted sql.NullInt32
}

// user_management_session
type UserManagementSession struct {
	UssID         string
	UsaID         string
	UssRf         string
	UssKeyAt      string
	UssKeyRf      string
	UssClientID   string
	UssLoginTime  time.Time
	UssLogoutTime sql.NullTime
	Createdat     sql.NullTime
	Updatedat     sql.NullTime
	Deletedat     sql.NullTime
	Createdby     sql.NullString
	Updatedby     sql.NullString
}

// user_pato_account
type UserPatoAccount struct {
	UsaPtID              int32
	UsaPtEmail           string
	UsaPtSalt            string
	UsaPtPassword        string
	UsaPtActiveTime      sql.NullTime
	UsaPtLockedTime      sql.NullTime
	UsaPtRecoverPassTime sql.NullTime
	UsaPtVerifyTime      sql.NullTime
	UsaPtVerifyCode      sql.NullString
	UsaPtRecoverPassCode sql.NullString
	// 0: kích hoạt, 1: chưa kích hoạt
	UsaPtActive sql.NullInt32
	// 0: chưa khóa, 1: đã khóa
	UsaPtLocked sql.NullInt32
	// 0: system, 1: facebook, 2: google, 3: apple
	UsaPtType sql.NullString
	Createdat sql.NullTime
	Updatedat sql.NullTime
	Deletedat sql.NullTime
	Createdby sql.NullString
	Updatedby sql.NullString
	Deletedby sql.NullString
	// 0: chưa xóa, 1: đã xóa
	Isdeleted sql.NullInt32
}

// user_pato_profile
type UserPatoProfile struct {
	UsPtID       int32
	UsPtName     sql.NullString
	UsPtAvatar   sql.NullString
	UsPtPhone    sql.NullString
	UsPtGender   sql.NullString
	UsPtAddress  sql.NullString
	UsPtBirthday sql.NullTime
	Createdat    sql.NullTime
	Updatedat    sql.NullTime
	Deletedat    sql.NullTime
	Createdby    sql.NullString
	Updatedby    sql.NullString
	Deletedby    sql.NullString
	// 0: chưa xóa, 1: đã xóa
	Isdeleted sql.NullInt32
}

// user_pato_session
type UserPatoSession struct {
	UssPtID         string
	UsaPtID         int32
	UssPtRf         string
	UssPtKeyAt      string
	UssPtKeyRf      string
	UssPtClientID   string
	UssPtLoginTime  time.Time
	UssPtLogoutTime sql.NullTime
	Createdat       sql.NullTime
	Updatedat       sql.NullTime
	Deletedat       sql.NullTime
	Createdby       sql.NullString
	Updatedby       sql.NullString
}
